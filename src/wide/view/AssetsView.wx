Namespace wide


#Import "AssetCore"

Class AssetsView Extends AssetCore


	Method New( docs:DocumentManager )
		Super.New( docs )

		
		'respond to clicked buttons
		ctrls.Clicked = lambda( ctrl:int )
			Select ctrl
				Case _openButton
					MainWindow.OnFileDropped( _fullPath )
			End Select
		End
	End

	
'	Method Init()
'	End
	


	method GetFolders( path:String )
		If path = "" Then
			Return
		End If
		
		path = ExtractDir( path )+"Assets/"
		_assetsPath = path
'		Print "GetPath = "+path
		
		local f:string
		Local dir:string[] = filesystem.LoadDir( path )
		
		_currentFolder = 0
'
		_folderCount = 0
		_folderPath[_folderCount] = StripExt( path )
		_folder[_folderCount] = "Contents"

		'load the folders
		For f = Eachin dir
			Local fpath:string = path+"/"+f
			
			If f <> "" Then
				Select GetFileType( fpath )
					Case FileType.Directory
						If f.Left(8) <> "$RECYCLE" And f.Left(1) <> "." and _folderCount < MAX_FILE-1 Then
							_folderCount += 1
							
							_folderPath[_folderCount] = fpath
							_folder[_folderCount] = StripExt(f)
						End if
				End Select
			End if
		Next
		
'		Print "count:"+_folderCount
	
		'sort the folders
'		Local k:int
'		Local l:int
'		Local tmp:int
'		For k = start To _count-1
'			For l = k+1 To _count
'				if Lesser( _file[_index[l]], _file[_index[k]] ) Then
'					tmp = _index[k]
'					_index[k] = _index[l]
'					_index[l] = tmp
'				End If
'			Next
'		Next
	End Method
	
	


	
	
	Method OnRender( canvas:Canvas ) Override
		canvas.Color = GetNewColor( MainWindow._theme.IDE[0], 0.03 )
		canvas.DrawRect( 0,0, Width,Height)
		
		If _path <> MainWindow.MainFile Then
			_path = MainWindow.MainFile
			GetFolders( _path )
			GetFiles( "" )
			Print "files:"+_count
		End If
		
		If _path = "" Then
			canvas.Color = Color.White
			canvas.DrawImage( _warningImage, 10,10 )
			
			canvas.Color = MainWindow._theme.IDE[1]
			canvas.DrawText( "You need to set a 'core' file - The document tab will show a 'core' file with a +", 5, Height * 0.4 )
			canvas.DrawText( "Double click a .wx document tab to set the core file", 5, Height * 0.5 )
			canvas.DrawText( "(this is the file that will be compiled)", 5, Height * 0.6 )
			Return
		End If
		
		local font:Font = canvas.Font
		_scale = App.Theme.Scale.x
		canvas.Font = App.Theme.OpenFont( "asset::UbuntuMono-R.ttf", 12 * _scale )
'		canvas.Font = _ubuntuFont
		
		If Width > Height Then
			RenderWide( canvas )
		Else
			RenderTall( canvas )
		End If
		
		canvas.Font = font
	End Method
	
#rem
	Method OnMouseEvent( event:MouseEvent ) Override
		Select event.Type
			Case EventType.MouseWheel
				local z:Float = -event.Wheel.Y

#If __TARGET__<>"macos"
				z = -z
#endif
			
				If z > 0 Then
					_zoom *= 1.5
				Else If z < 0 Then
					_zoom /= 1.5
				Endif
				_zoom = Clamp(_zoom, 0,10)
				
				ctrls.SetValue( _vFaderZoom, _zoom * 0.1 )
				
				App.RequestRender()
				
			Case EventType.MouseDown
				_mouseDown = Mouse.ButtonDown( MouseButton.Left )
				
				App.RequestRender()
				
			Case EventType.MouseUp
				_mouseDown = False

				App.RequestRender()

			Case EventType.MouseMove
				_mouseX = event.Location.X
				_mouseY = event.Location.Y
				_mouseDown = Mouse.ButtonDown( MouseButton.Left )

				If ctrls.Over( _mouseX, _mouseY ) Then
					App.RequestRender()
				End If
		End
	
	End
#End rem
	


	method OnMouseDoubleClick() Override
		Select ctrls.ControlOver
			Case 0
			Default
				If _mouseX < _xDiv1 Then 'over folders
				Else If _mouseX > _xDiv2 And _mouseX < _xDiv3 And _fullPath <> "" Then 'open file
					local time:long = Millisecs() - _clickTime
					If time < 300 Then
						MainWindow.OnFileDropped( _fullPath )
'						Print _fullPath
					End If
				Else ' over current resource
				End If
		End Select
	End Method
	

	method RenderTall( canvas:Canvas )
		Local scale:float = App.Theme.Scale.x

'		canvas.Color = MainWindow._theme.IDE[1]
'		canvas.DrawText( MainWindow.MainFile, 10,5 )

		canvas.Color = Color.White
		canvas.DrawImage( _warningImage, 10,10 )
			
		canvas.Color = MainWindow._theme.IDE[1]
		canvas.DrawText( "Assets can only be viewed", 5, 80 * scale )
		canvas.DrawText( "When docked at the bottom", 5, 100 * scale )

	End method
	
End

