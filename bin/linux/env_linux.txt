
WX_THREADS=1

'--------------------------------------------------------------------------------------
'----- External modules folders
'--------------------------------------------------------------------------------------
'
' Semi-colon separated list of module root dirs, relative to WX_HOME or absolute.
'
' wake always adds local modules/ dir to start of list.
'
' Use double-quotes when there are spaces in path!
'
' The Tilde character ('~') can be used at the beginning of the path
' to use the user directory. '~' is equivalent to UserDir() in Wonkey.
'
' You can also set the WX_MODULE_DIRS environment variable in your Shell/Terminal:
'   Linux/macOS/Raspbian: export WX_MODULE_DIRS="modules_ext;~/Wonkey Modules/"
'   Windows:                 set WX_MODULE_DIRS="modules_ext;~/Wonkey Modules/"
'
'WX_MODULE_DIRS="modules_ext;~/Wonkey Modules/"



'--------------------------------------------------------------------------------------
'----- LINUX DESKTOP TARGET
'--------------------------------------------------------------------------------------

'LD options
WX_LD_OPTS_LINUX=-lpthread -no-pie
WX_LD_OPTS_LINUX_DEBUG=
WX_LD_OPTS_LINUX_RELEASE=-no-pie -s -O3 -Wl,-s -Wl,-S -Wl,-x -Wl,--gc-sections

'C compiler options
WX_CC_OPTS_LINUX=-std=gnu99
WX_CC_OPTS_LINUX_DEBUG=
WX_CC_OPTS_LINUX_RELEASE=-O3 -DNDEBUG -ffunction-sections -fdata-sections

'C++ compiler options
WX_CPP_OPTS_LINUX=-std=c++11
WX_CPP_OPTS_LINUX_DEBUG=
WX_CPP_OPTS_LINUX_RELEASE=-O3 -DNDEBUG -ffunction-sections -fdata-sections


'--------------------------------------------------------------------------------------
'----- EMSCRIPTEN
'--------------------------------------------------------------------------------------

'Specify your EMSCRIPTEN version to use (one of: 1 for 1.x.x, 2 for 2.x.x)
'
WX_USE_EMSC_VERSION=2

'Path to you emsdk installation.
'
EMSDK=${HOME}/dev/emsdk

'For emscripten builds, you need emcc, em++ and emar in your PATH.
'
PATH=${PATH}:${EMSDK}:${EMSDK}/clang/e1.38.22_64bit:${EMSDK}/node/8.9.1_64bit/bin:${EMSDK}/emscripten/1.38.22

'To run emscripten apps you'll need mserver mini-server.
'
WX_MSERVER="${WX_HOME}/devtools/mserver-v86c/mserver_linux"

'LD options
WX_LD_OPTS_EMSCRIPTEN=-s USE_SDL=2 -s TOTAL_MEMORY=268435456 -s DISABLE_EXCEPTION_CATCHING=1 -s ERROR_ON_UNDEFINED_SYMBOLS=0
WX_LD_OPTS_EMSCRIPTEN_WASM=-s BINARYEN=1
WX_LD_OPTS_EMSCRIPTEN_DEBUG=-O2 -s ASSERTIONS=2
WX_LD_OPTS_EMSCRIPTEN_RELEASE=-O3

'C compiler options
WX_CC_OPTS_EMSCRIPTEN=-std=gnu99 -I. -s USE_SDL=2 -s FULL_ES2=1 -s TOTAL_MEMORY=268435456 -s DISABLE_EXCEPTION_CATCHING=1 -s ERROR_ON_UNDEFINED_SYMBOLS=0 -Wno-warn-absolute-paths
WX_CC_OPTS_EMSCRIPTEN_DEBUG=-O2
WX_CC_OPTS_EMSCRIPTEN_RELEASE=-O3 -DNDEBUG

'C++ compiler options
WX_CPP_OPTS_EMSCRIPTEN=-std=c++11 -I. -s USE_SDL=2 -s FULL_ES2=1 -s TOTAL_MEMORY=268435456 -s DISABLE_EXCEPTION_CATCHING=1 -s ERROR_ON_UNDEFINED_SYMBOLS=0 -Wno-warn-absolute-paths
WX_CPP_OPTS_EMSCRIPTEN_DEBUG=-O2
WX_CPP_OPTS_EMSCRIPTEN_RELEASE=-O3 -DNDEBUG


'--------------------------------------------------------------------------------------
'----- ANDROID TARGET
'--------------------------------------------------------------------------------------

WX_ANDROID_NDK=${HOME}/Library/Android/sdk/ndk/22.0.7026061

'Add path to android NDK
'
'PATH=${HOME}/Library/Android/sdk/ndk-bundle:${PATH}
PATH=${WX_ANDROID_NDK}:${PATH}

'Controls APP_ABI in Application.mk for NDK
'
'WX_ANDROID_APP_ABI=all
'WX_ANDROID_APP_ABI=armeabi-v7a x86
WX_ANDROID_APP_ABI=arm64-v8a x86_64

'Controls APP_PLATFORM in Application.mk for NDK
'
WX_ANDROID_APP_PLATFORM=android-16

'Android app compiler Compiler flags
'
WX_ANDROID_APP_CFLAGS=-std=gnu99 -fno-stack-protector -w
WX_ANDROID_APP_CPPFLAGS=-std=c++11 -fno-stack-protector -frtti -fexceptions -w

'Controls version of STL used by android apps.
'
WX_ANDROID_APP_STL=c++_static