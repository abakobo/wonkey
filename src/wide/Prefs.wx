Namespace wide


Const Prefs:=New PrefsInstance



Class PrefsInstance
	' AutoCompletion
	Field AcEnabled:bool = True
	Field AcKeywordsOnly:bool = False
	Field AcShowAfter:int = 2
	Field AcUseTab:bool = True
	Field AcUseEnter:bool = True
	Field AcUseSpace:bool = False
	Field AcUseDot:bool = False
	Field AcNewLineByEnter:bool = False
	Field AcStrongFirstChar:bool = True
	Field AcUseLiveTemplates:bool = True

	Field MainToolBarVisible:bool = True
	Field MainToolBarSide:bool = False
	Field MainToolBarSimple:bool = False
	Field MainProjectIcons:bool = True
	Field MainProjectAutoscrollToFile:bool = False
	Field MainProjectSingleClickExpanding:bool = False
	Field MainPlaceDocsAtBegin:bool = False

	Field EditorToolBarVisible:bool = False
	Field EditorGutterVisible:bool = True
	Field EditorShowWhiteSpaces:bool = True
	Field EditorFontPath:String
	Field EditorFontSize:int = 16
	Field EditorShowEvery10LineNumber:bool = False
	Field EditorCodeMapVisible:bool = True
	Field EditorAutoIndent:bool = True
	Field EditorAutoPairs:bool = True
	Field EditorSurroundSelection:bool = True
	Field EditorShowParamsHint:bool = True
	Field EditorUseSpacesAsTabs:bool = False
	Field EditorTabSize:int = 4
	Field EditorRemoveLinesTrailing:bool = False
	Field EditorLineSpacing:float = 1.0

	Field SourceSortByType:bool = false
	Field SourceShowInherited:bool = False
	Field SourceShowMethod:bool = True
	Field SourceShowFunction:bool = True
	Field SourceShowProperty:bool = true
	Field SourceShowLocal:bool = False
	Field SourceShowField:bool = False

	Field WonkeyRootPath:String
	Field IdeHomeDir:String
	Field OpenGlProfile:string = "es"
	Field HotkeysFilePath:String

	Field TemplatesInsertByEnter:bool = True
	
	Field SiblyMode:Bool

	
	Property FindFilesFilter:String()
		Return _findFilter
	Setter( value:String )
		_findFilter=value
		SaveLocalState()
	End

	
	Method LoadState( json:JsonObject )
		If json.Contains( "main" )
			Local j2:=json["main"].ToObject()
			MainToolBarVisible=Json_GetBool( j2,"toolBarVisible",MainToolBarVisible )
			MainToolBarSide=Json_GetBool( j2,"toolBarSide",MainToolBarSide )
			MainToolBarSimple=Json_GetBool( j2,"toolBarSimple",MainToolBarSimple )
			MainProjectIcons=Json_GetBool( j2,"projectIcons",MainProjectIcons )
			MainProjectAutoscrollToFile=Json_GetBool( j2,"projectScrollToFile",MainProjectAutoscrollToFile )
			MainProjectSingleClickExpanding=Json_GetBool( j2,"singleClickExpanding",MainProjectSingleClickExpanding )
			MainPlaceDocsAtBegin=Json_GetBool( j2,"placeDocsAtBegin",MainPlaceDocsAtBegin )
			OpenGlProfile=Json_GetString( j2,"openglProfile",OpenGlProfile )
		Endif
		
		If json.Contains( "completion" )
			Local j2:=json["completion"].ToObject()
			AcEnabled=j2["enabled"].ToBool()
			AcKeywordsOnly=j2["keywordsOnly"].ToBool()
			AcShowAfter=j2["showAfter"].ToNumber()
			AcUseTab=j2["useTab"].ToBool()
			AcUseEnter=j2["useEnter"].ToBool()
			AcUseSpace=Json_GetBool( j2,"useSpace",AcUseSpace )
			AcUseDot=Json_GetBool( j2,"useDot",AcUseDot )
			AcNewLineByEnter=Json_GetBool( j2,"newLineByEnter",AcNewLineByEnter )
			AcUseLiveTemplates=Json_GetBool( j2,"useLiveTemplates",AcUseLiveTemplates )
		Endif
		
		If json.Contains( "editor" )
			Local j2:=json["editor"].ToObject()
			EditorToolBarVisible=j2["toolBarVisible"].ToBool()
			EditorGutterVisible=j2["gutterVisible"].ToBool()
			EditorShowWhiteSpaces=Json_GetBool( j2,"showWhiteSpaces",EditorShowWhiteSpaces )
			EditorFontPath=Json_GetString( j2,"fontPath", EditorFontPath )
			EditorFontSize=Json_GetInt( j2,"fontSize",EditorFontSize )
			EditorShowEvery10LineNumber=Json_GetBool( j2,"showEvery10",EditorShowEvery10LineNumber )
			EditorCodeMapVisible=Json_GetBool( j2,"codeMapVisible",EditorCodeMapVisible )
			EditorAutoIndent=Json_GetBool( j2,"autoIndent",EditorAutoIndent )
			EditorAutoPairs=Json_GetBool( j2,"autoPairs",EditorAutoPairs )
			EditorSurroundSelection=Json_GetBool( j2,"surroundSelection",EditorSurroundSelection )
			EditorShowParamsHint=Json_GetBool( j2,"showParamsHint",EditorShowParamsHint )
			EditorUseSpacesAsTabs=Json_GetBool( j2,"useSpacesAsTabs",EditorUseSpacesAsTabs )
			EditorTabSize=Json_GetInt( j2,"tabSize",EditorTabSize )
			EditorRemoveLinesTrailing=Json_GetBool( j2,"removeLinesTrailing",EditorRemoveLinesTrailing )
			EditorLineSpacing=Json_GetFloat( j2,"lineSpacing",EditorLineSpacing )
		Endif

		
		If json.Contains( "source" )
			Local j2:=json["source"].ToObject()
			SourceSortByType=j2["sortByType"].ToBool()
			SourceShowInherited=j2["showInherited"].ToBool()
			If j2.Contains( "showMethod") Then
				SourceShowMethod = j2["showMethod"].ToBool()
				SourceShowFunction = j2["showFunction"].ToBool()
				SourceShowProperty = j2["showProperty"].ToBool()
				SourceShowLocal = j2["showLocal"].ToBool()
				SourceShowField = j2["showField"].ToBool()
			Else
				SourceShowMethod = True
				SourceShowFunction = True
				SourceShowProperty = True
				SourceShowLocal = False
				SourceShowField = False
			End If
		Endif

		
		If json.Contains( "templates" )
			Local j2:=json["templates"].ToObject()
			TemplatesInsertByEnter=Json_GetBool( j2,"insertByEnter",TemplatesInsertByEnter )
		Endif
		
		If json.Contains( "siblyMode" )
			SiblyMode=json["siblyMode"].ToBool()
		End
	End


	Method SaveState( json:JsonObject )
		Local j:=New JsonObject
		json["main"]=j
		j["toolBarVisible"]=New JsonBool( MainToolBarVisible )
		j["toolBarSide"]=New JsonBool( MainToolBarSide )
		j["toolBarSimple"]=New JsonBool( MainToolBarSimple )
		j["projectIcons"]=New JsonBool( MainProjectIcons )
		j["projectScrollToFile"]=New JsonBool( MainProjectAutoscrollToFile )
		j["singleClickExpanding"]=New JsonBool( MainProjectSingleClickExpanding )
		j["placeDocsAtBegin"]=New JsonBool( MainPlaceDocsAtBegin )
		j["openglProfile"]=New JsonString( OpenGlProfile )
		
		j=New JsonObject
		json["completion"]=j
		j["enabled"]=New JsonBool( AcEnabled )
		j["keywordsOnly"]=New JsonBool( AcKeywordsOnly )
		j["showAfter"]=New JsonNumber( AcShowAfter )
		j["useTab"]=New JsonBool( AcUseTab )
		j["useEnter"]=New JsonBool( AcUseEnter )
		j["useSpace"]=New JsonBool( AcUseSpace )
		j["useDot"]=New JsonBool( AcUseDot )
		j["newLineByEnter"]=New JsonBool( AcNewLineByEnter )
		j["useLiveTemplates"]=New JsonBool( AcUseLiveTemplates )
		
		j=New JsonObject
		json["editor"]=j
		j["toolBarVisible"]=New JsonBool( EditorToolBarVisible )
		j["gutterVisible"]=New JsonBool( EditorGutterVisible )
		j["showWhiteSpaces"]=New JsonBool( EditorShowWhiteSpaces )
		j["fontPath"]=New JsonString( EditorFontPath )
		j["fontSize"]=New JsonNumber( EditorFontSize )
		j["showEvery10"]=New JsonBool( EditorShowEvery10LineNumber )
		j["codeMapVisible"]=New JsonBool( EditorCodeMapVisible )
		j["autoIndent"]=New JsonBool( EditorAutoIndent )
		j["autoPairs"]=New JsonBool( EditorAutoPairs )
		j["surroundSelection"]=New JsonBool( EditorSurroundSelection )
		j["showParamsHint"]=New JsonBool( EditorShowParamsHint )
		j["useSpacesAsTabs"]=New JsonBool( EditorUseSpacesAsTabs )
		j["tabSize"]=New JsonNumber( EditorTabSize )
		j["removeLinesTrailing"]=New JsonBool( EditorRemoveLinesTrailing )
		j["lineSpacing"]=New JsonNumber( EditorLineSpacing )
		
		j=New JsonObject
		json["source"]=j
		j["sortByType"]=New JsonBool( SourceSortByType )
		j["showInherited"]=New JsonBool( SourceShowInherited )
		j["showMethod"]=New JsonBool( SourceShowMethod )
		j["showFunction"]=New JsonBool( SourceShowFunction )
		j["showProperty"]=New JsonBool( SourceShowProperty )
		j["showField"]=New JsonBool( SourceShowField )
		j["showLocal"]=New JsonBool( SourceShowLocal )
		
		j=New JsonObject
		json["templates"]=j
		j["insertByEnter"]=New JsonBool( TemplatesInsertByEnter )
		
		If SiblyMode json["siblyMode"]=JsonBool.TrueValue
	End

	
	Method LoadLocalState()
		IdeHomeDir=HomeDir()+".wide/"
		CreateDir( IdeHomeDir )
		
		HotkeysFilePath=IdeHomeDir+"hotkeys.json"
		
		Local json:=JsonObject.Load( AppDir()+"state.json" )
		If Not json Return
		
		WonkeyRootPath=Json_GetString( json.Data,"rootPath","" )
		If Not WonkeyRootPath.EndsWith( "/" ) Then WonkeyRootPath+="/"
		
		FindFilesFilter=Json_GetString( json.Data,"findFilesFilter","wx,txt" )
	End


	Method SaveLocalState()
		If Not WonkeyRootPath.EndsWith( "/" ) Then WonkeyRootPath+="/"
		
		Local json:=New JsonObject
		json["rootPath"]=New JsonString( WonkeyRootPath )
		json["findFilesFilter"]=New JsonString( FindFilesFilter )
		json.Save( AppDir()+"state.json" )
	End


	Method GetCustomFontPath:String()
		If Not EditorFontPath Return ""
		If Not EditorFontPath.Contains( ".ttf" ) Return ""
		
		Local path:=EditorFontPath
		If Not path.Contains( ":" ) 'relative asset path
			path=AssetsDir()+path
		Endif
		
		Return path
	End


	Method GetCustomFontSize:Int()
		Return Max( EditorFontSize, 6 ) '6 is a minimum
	End


Private
	
	Field _findFilter:String
End
