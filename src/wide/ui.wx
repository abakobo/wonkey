Namespace myapp


#Import "<std>"
#Import "<mojo>"
Using std..
Using mojo..


#Import "miniui.wx"
#Import "storm.wx"


#Import "assets/wonkey.png"
#Import "assets/icon4.png"

#Import "assets/star.png"

#Import "assets/node_open.png"
#Import "assets/node_closed.png"


Function Main()
	New AppInstance
	New ControlWindow
	App.Run()
End

global _xamCol:Color[] = New Color[]( Color.XamCoral, Color.XamPink, Color.XamPurple, Color.XamViolet, Color.XamBlue,
	Color.XamSky, Color.XamWater, Color.XamAqua, Color.XamPine, Color.XamGreen, Color.XamMint, Color.XamLime,
	Color.XamYellow, Color.XamPeach, Color.XamOrange, Color.XamEmber, Color.XamBrown, Color.XamSilver, Color.XamSteel )


class ControlWindow Extends Window
	field ctrls:MiniUI = New MiniUI()
	field storm:StormSystem = New StormSystem()

	field _openImage:Image
	field _closedImage:Image

	field _wideImage:Image
	field _wonkeyImage:Image

	field _particleImage:Image

	field ctrlTab:int

'	field VFade1:int
'	field VText1:int
'	field ButtonMinus:int
'	field ButtonPlus:int
	field ButtonOK:int
'	field ButtonCancel:int

	field lst:string[]
	field ctrlList:int = -1
	field ctrlColorList:int = -1
	field syntaxList:string[]
	
	Method New( title:String = "Simple mojo app", width:Int = 640, height:Int = 580, flags:WindowFlags = Null )
		Super.New( title, width, height, flags )

		ClearColor = Color.PicoBlack
		
		_openImage = Image.Load( "asset::node_open.png" )
		_closedImage = Image.Load( "asset::node_closed.png" )

		_wideImage = Image.Load( "asset::wonkey.png" )
		_wonkeyImage = Image.Load( "asset::icon4.png" )
		
		_particleImage = Image.Load( "asset::star.png" )

		' use a different highlight color - default is uiblue
'		ctrls.OverColor = Color.UIMango * 0.8

		'example 1 20x20 grib with use drawn lists
		ctrls.SetGrid( 20, 20 )
		'show the underlying grid
'		ctrls.ShowGrid = true
'		ctrls.ShowGuides = True

'		local tabs:string[] = New string[]( "General", "Interface", "Editor", "UI Colors", "you", "All" )
'		ctrlTab = ctrls.AddTabList( 0,0,20,1.3, Color.Black* 0.2, tabs )
'		ctrls.AddPanel( 0,1.3,20,0.1, Color.UIBlue )

		lst = New string[]( "About Wide", "About Wonkey", "Thanks" )
		ctrlList = ctrls.AddCustomList( 0.5,0.5,6,17, Color.Black* 0.2, lst.Length, 40, True )
		ctrls.SetBorder( ctrlList, 6 )
		ctrls.SetSelected( ctrlList, 0 )

'		ButtonCancel = ctrls.AddButton( 13,18.25, 3, 1.25, Color.DarkGrey, "Cancel", True )
		ButtonOK = ctrls.AddButton( 16.5,18.25, 3, 1.25, Color.UIBlue* 0.8, "OK", True )

		'----------------------------
		ctrls.Page = 1

		ctrls.AddImage( 8.5,0, 10, 10, Color.White, _wideImage )
		ctrls.AddTextBold( 8.5,10, 10, 1, Color.White, "Wide Ver 1.0", ALIGN_CENTER )

'		local check:int = ctrls.AddCheckBox( 8.5,11, 10, 1, Color.DarkGrey, "Wide Ver 1.0", ALIGN_LEFT, True )
'		ctrls.SetBorder( check, 3 )
'		check = ctrls.AddCheckBox( 8.5,12, 10, 1, Color.DarkGrey, "Wide Ver 1.0", ALIGN_RIGHT, True )
'		ctrls.SetBorder( check, 3 )
'
'		ctrls.AddSwitch( 8.5,13, 2, 1, Color.Grey )

		local c:int = ctrls.AddPanel( 8,13, 10, 5, Color.Black*0.2, True )
		ctrls.SetCustomRender( c )

		'----------------------------
		ctrls.Page = 2

		ctrls.AddImage( 8.5,0, 10, 10, Color.White, _wonkeyImage )
		ctrls.AddTextBold( 8.5,10, 10, 1, Color.White, "Wonkey Ver 1.0", ALIGN_CENTER )

		'----------------------------
		ctrls.Page = 3
		
		syntaxList = New string[]( 
			"Identifier", "Keyword", "String", "Number", "Remark", "Compiler", "Other", "CoreType",
			"Class", "Variable", "Method", "Function", "Property", "Lambda",
			"Background", "Current Line", "Line Number", "Cursor", "Line Error" )
		ctrls.AddTextBold( 7,0.5, 10, 1, Color.White, "Special thanks go to:" )
		ctrlColorList = ctrls.AddCustomList( 7,1.5, 12.5,16, Color.Black* 0.2, syntaxList.Length, 20, True )
		ctrls.SetBorder( ctrlColorList, 6 )

		

		ctrls.Page = 1
		'example 2 basic text list on 20x20 grid
'		ctrls.SetGrid( 20, 20 )
'		lst = New string[]( "Syntax Colors", "Syntax Font", "UI Colors", "you", "All" )
'		ctrlList = ctrls.AddList( 2,3,5,10, Color.Black* 0.2, lst, 20, True )
'		ButtonMinus = ctrls.AddButton( 0,15, 3, 1, Color.Violet, "-", True )
'		ButtonPlus = ctrls.AddButton( 5,15, 3, 1, Color.UIPurple, "+", True )


		'example 3 faders no grid direct to canvas
'		ctrls.AddPanelText( 10,10, 245, 25, Color.VicRed*0.8, "ENVELOPE", ALIGN_CENTER )
'		ctrls.AddVFader( 15,50, 40, 180, Color.UIDarkGrey, True )
'		ctrls.AddVFader( 75,50, 40, 180, Color.UIDarkGrey, True )
'		ctrls.AddVFader( 135,50, 40, 180, Color.UIDarkGrey, True )
'		ctrls.AddVFader( 205,50, 40, 180, Color.UIDarkGrey, True )
'		ctrls.AddTextBold( 15,230, 35, 25, Color.LightGrey, "A" )
'		ctrls.AddTextBold( 75,230, 35, 25, Color.LightGrey, "D" )
'		ctrls.AddTextBold( 135,230, 35, 25, Color.LightGrey, "S" )
'		ctrls.AddTextBold( 205,230, 35, 25, Color.LightGrey, "R" )
		
		
		'example 4 buttons no grid direct to canvas
'		ctrls.AddImageButton( 1,1, 50, 20, Color.Pine, "", _openImage )
'		VFade1 = ctrls.AddVFader( 400,10, 48, 200, Color.DarkGrey, True )
'		VText1 = ctrls.AddText( 400,210, 48, 20, Color.UIPink, "0" )
'		ctrls.AddButton( 200,10, 150, 50, Color.Red, "Hello" )
'		ctrls.AddButton( 10,100, 100, 40, Color.Sky, "Hola", True )
'		ctrls.AddButton( 170,100, 200, 50, Color.Gold*0.5, "Hello", True )
'
'		ButtonMinus = ctrls.AddButton( 10,160, 30, 30, Color.Violet, "-", True )
'		ButtonPlus = ctrls.AddButton( 50,160, 30, 30, Color.UIPurple, "+", True )

		ctrls.Clicked = lambda( ctrl:int )
			Select ctrl
				Case ctrlTab
					ctrls.Page = ctrls.GetSelected( ctrl )+1
					
'				Case ButtonMinus
'					ctrls.Scale -= 0.1
'					
'				Case ButtonPlus
'					ctrls.Scale += 0.1
'					
'				Case VFade1
'					local val:float = ctrls.GetValue( ctrl )
'					ctrls.SetText( VText1, int(val*100) )

				Case ctrlColorList
					Particles( _xamCol[ ctrls.GetSelected( ctrl ) ] )

				Default
					Print "ctrl clicked: "+ctrl
			End Select
		end

		'used in example 1
		ctrls.OnDraw = lambda( canvas:Canvas, ctrl:int, x:int, y:int, width:int, height:int, color:Color, border:int )
			local draw:bool = False
			Select ctrl
				Case ctrlList, ctrlColorList
					canvas.Color = Color.Grey * 0.5
					canvas.DrawFrameRoundedRect( x, y, width, height, 5 )
					draw = True
			End Select
			
			If Not draw Then
				Select ctrls.GetKind( ctrl )
					Case CTRL_CUSTOMPANELROUND
						canvas.Color = color
						canvas.DrawRoundedRect( x, y, width, height, 5 )
						canvas.Color = Color.Grey * 0.5
						canvas.DrawFrameRoundedRect( x, y, width, height, 5 )
				End Select
			End If
		End

		'used in example 1
		ctrls.OnDrawItem = lambda( canvas:Canvas, ctrl:int, item:int, selected:bool, x:int, y:int, width:int, height:int, border:int )
			Select ctrl
				Case ctrlList
					If selected Then
						canvas.Color = Color.LightGrey
					Else
						canvas.Color = Color.Grey
					End If
					canvas.DrawText( lst[item], x+border, y+height*0.5, 0,0.5 )
					canvas.DrawText( lst[item], x+border+1, y+height*0.5, 0,0.5 )

				Case ctrlColorList
					If selected Then
						canvas.Color = Color.LightGrey
					Else
						canvas.Color = Color.Grey
					End If
					canvas.DrawText( syntaxList[item], x+border, y )
					canvas.Color = _xamCol[item]
					canvas.DrawRect( x+width-border, y+2, -height-height, height-4 )
			End Select
		End
	End method


	method Particles( col:Color )
		local k:int
		For k = 1 To 15
			storm.AddGravity2d( 2.5, Rnd(70,140), 0, col, _mouseX, _mouseY, Rnd(-0.5,0.3),Rnd(-1,-3), 0.1,0.005 )
		Next
	End method


	Method OnRender( canvas:Canvas ) Override
		App.RequestRender()
		
		ctrls.DrawControls( canvas, _mouseX, _mouseY, _mouseDown )
		
		storm.Update()
		local k:int
		For k = 0 to storm.Count
			If storm._stormLife[k] > 0 and storm._stormScale[k] > 0 Then
				canvas.Color = storm._stormColor[k]
				canvas.DrawImage( _particleImage, storm._stormX[k], storm._stormY[k],0, storm._stormScale[k], storm._stormScale[k] )
			End if
		Next
	End method
	
	
	method OnMouseMove() Override
		If ctrls.Over( _mouseX, _mouseY ) Then
			App.RequestRender()
		End If
	End method

	
End Class

